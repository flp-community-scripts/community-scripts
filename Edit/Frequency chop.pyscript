"""flp
Title: Frequency chop
Author: BinaryBorn
Category: Edit
Version: 1.4
License: ISC

Description: 
Chop notes into pieces at a specific frequency.

Changelog:
v1.0 (2023-06-30)
  - initial version

v1.1 (2023-07-17)
  - added note.release property to copy

v1.2 (2023-09-21)
  - added ISC license text

v1.3 (2024-07-08)
  - notes are now cloned using note.clone

v1.4 (2024-09-11)
  - added hints
"""

import flpianoroll as flp
import math

def createDialog():
  form = flp.ScriptDialog("Frequency chop","Chop notes into pieces at a specific frequency."
  + "\r\nWorks best at higher PPQ and lower frequencies."
  + "\r\n\r\nv1.4 (2024-09-11), BinaryBorn")
  form.AddInputCombo('Note', ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'], 0, hint='Chop frequency (note)')
  form.AddInputKnobInt('Octave', 4, 0, 6, hint='Chop frequency (octave)')
  form.AddInputKnobInt('Tempo', 120, 10, 522, hint='Project tempo')
  
  return form

def apply(form: flp.ScriptDialog):
  tempo = int(form.GetInputValue('Tempo'))

  noteCount = flp.score.noteCount

  # get current notes
  notes = [flp.score.getNote(i) for i in range(noteCount)]

  # calculate frequency in Hz
  midiPitch = int(form.GetInputValue('Octave')) * 12 + int(form.GetInputValue('Note'))
  freq = 440 * pow(2, (midiPitch - 69) / 12)
  # ... convert to ticks
  timePerTick = (60 / tempo) / (4 * flp.score.PPQ)
  timePerOsc = 1 / freq
  ticksPerOsc = timePerOsc / timePerTick

  newNotes = []

  # go through all notes and replace by chopped copy
  for note in notes:
    # origin note
    t0 = note.time
    dt = note.length
    t1 = t0 + dt

    # chop
    chops = math.ceil(dt / ticksPerOsc)
    idx = 0
    while idx < chops:
      s0 = int(t0 + ticksPerOsc * idx)
      s1 = min(int(t0 + ticksPerOsc * (idx + 1)), t1)

      snote = note.clone()
      snote.time = s0
      snote.length = s1 - s0
      snote.selected = True

      newNotes.append(snote)

      idx += 1

  # update score
  flp.score.clearNotes()
  for note in newNotes:
    flp.score.addNote(note)
